#!/usr/bin/env bash
#
# img_avrg
#
# combine a series of images in a single average image
#
# ToDo:
#       * add progress bar
#
# w. zinke


Usage() {
cat << EOF

    Usage: $0 [options]

    Average a set of image files into a single image.

    OPTIONS:
            -o        file name for the averaged image
            -lst      list of files to be averaged
            -typ      Method used for averaging, available options are:
                        dark, light, multi, overlay, screen, interpol, avrg, calc (default) 
            -blend    blending level (0-100)
EOF
    exit 1
}

# set defaults
outfl="avrg_imag.png"
avrgtyp="calc"
blnd=""
get_fls=1

# get options
eval_str=""
while [ $# -gt 0 ] ;
do
    case $1 in
        -lst)    fllst="$2"
                 get_fls=0
                 shift 2
                 ;;
        -o)     outfl=$2
                 shift 2
                 ;;
        -typ)    avrgtyp=$2
                 shift 2
                 ;;
        -blend)  blnd="-blend 100x$2"
                 shift 2
                 ;;
         -*)     Usage
                 ;;
          *)     break
                 ;;
    esac
done

# if no list of image files is provided as input,
# then convert all files in the current directory
if [ $get_fls -eq 1 ]
then
    fllst=$(find . -maxdepth 1 -type f -exec file --mime-type {} \+ | \
            awk -F: '{if ($2 ~/image\//) print $1}' | cut -d/ -f2)
fi


# looping over the files to add them. This needs to be done, because otherwise 
# all files will be loaded into the memory at once, likely causing a crash
i=0
for file in $fllst
do
    i=$(($i+1))

    echo -n "$file.. "
    
    if [ $i -eq 1 ]
    then
        if [ "$file" != "$outfl" ]
        then
            cp $file $outfl
            
        fi
    else
    
        case $avrgtyp in
    
            dark)
                convert $file $outfl $blnd -background black -compose lighten -flatten $outfl
                ;;
            
            light)
                convert $file $outfl $blnd -background black -compose lighten -flatten $outfl
                ;;
                
            multi)
                convert $file $outfl $blnd -background white -compose multiply -flatten $outfl
                ;;

            screen)
                convert $file $outfl $blnd -background black -compose screen -flatten $outfl
                ;;
                
#             interpol)
#                 convert $file $outfl $blnd -compose interpolate -flatten $outfl
#                 ;;
                
            overlay)
                convert $file $outfl $blnd -background white -compose overlay -flatten $outfl
                ;;

             avrg)
                convert $file $outfl $blnd -evaluate-sequence Mean $outfl
                ;;

            calc)
                convert $file $outfl $blnd -fx "(u+$i*v)/$[$i+1]" -flatten $outfl
                ;;
                
            *)
                echo -n "unknown averaging type '$avrgtyp'"
                ;;
        esac

    fi
done # | whiptail --title 'Image Averaging' --gauge 'Running...' 6 60 0 
 
# https://imagemagick.org/script/compose.php 
# https://legacy.imagemagick.org/Usage/compose/#math


